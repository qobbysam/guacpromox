version: '3.8'

################################################################################
# GUACAMOLE DOCKER COMPOSE CONFIGURATION
#
# This Docker Compose file deploys the complete Guacamole stack:
# - PostgreSQL database for user/connection management
# - guacd daemon for remote desktop protocol handling
# - Guacamole web application
#
# USAGE: docker-compose up -d
################################################################################

services:
  # PostgreSQL Database
  guacamole-db:
    container_name: guacamole-postgres
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMePostgresPassword123!}
      PGDATA: /var/lib/postgresql/data/guacamole
    volumes:
      - guacamole-db-data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
    networks:
      - guacamole-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U guacamole_user -d guacamole_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Guacamole Daemon (guacd)
  guacd:
    container_name: guacd
    image: guacamole/guacd:1.5.4
    restart: unless-stopped
    networks:
      - guacamole-network
    volumes:
      - guacd-drive:/drive
      - guacd-record:/record
    healthcheck:
      test: ["CMD", "pgrep", "guacd"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Guacamole Web Application
  guacamole:
    container_name: guacamole
    image: guacamole/guacamole:1.5.4
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822
      POSTGRES_HOSTNAME: guacamole-db
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMePostgresPassword123!}
      POSTGRES_AUTO_CREATE_ACCOUNTS: "true"
    depends_on:
      guacamole-db:
        condition: service_healthy
      guacd:
        condition: service_healthy
    networks:
      - guacamole-network
    volumes:
      - guacamole-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/guacamole/"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  guacamole-network:
    driver: bridge

volumes:
  guacamole-db-data:
    driver: local
  guacamole-data:
    driver: local
  guacd-drive:
    driver: local
  guacd-record:
    driver: local
